Release 14.7 - xst P.20131013 (nt64)
Copyright (c) 1995-2013 Xilinx, Inc.  All rights reserved.
--> Parameter TMPDIR set to xst/projnav.tmp


Total REAL time to Xst completion: 1.00 secs
Total CPU time to Xst completion: 0.56 secs
 
--> Parameter xsthdpdir set to xst


Total REAL time to Xst completion: 1.00 secs
Total CPU time to Xst completion: 0.56 secs
 
--> Reading design: FPU_Multiplication_Function.prj

TABLE OF CONTENTS
  1) Synthesis Options Summary
  2) HDL Parsing
  3) HDL Elaboration
  4) HDL Synthesis
       4.1) HDL Synthesis Report
  5) Advanced HDL Synthesis
       5.1) Advanced HDL Synthesis Report
  6) Low Level Synthesis
  7) Partition Report
  8) Design Summary
       8.1) Primitive and Black Box Usage
       8.2) Device utilization summary
       8.3) Partition Resource Summary
       8.4) Timing Report
            8.4.1) Clock Information
            8.4.2) Asynchronous Control Signals Information
            8.4.3) Timing Summary
            8.4.4) Timing Details
            8.4.5) Cross Clock Domains Report


=========================================================================
*                      Synthesis Options Summary                        *
=========================================================================
---- Source Parameters
Input File Name                    : "FPU_Multiplication_Function.prj"
Ignore Synthesis Constraint File   : NO

---- Target Parameters
Output File Name                   : "FPU_Multiplication_Function"
Output Format                      : NGC
Target Device                      : xc7a100t-3-csg324

---- Source Options
Top Module Name                    : FPU_Multiplication_Function
Automatic FSM Extraction           : YES
FSM Encoding Algorithm             : Auto
Safe Implementation                : No
FSM Style                          : LUT
RAM Extraction                     : Yes
RAM Style                          : Auto
ROM Extraction                     : Yes
Shift Register Extraction          : YES
ROM Style                          : Auto
Resource Sharing                   : YES
Asynchronous To Synchronous        : NO
Shift Register Minimum Size        : 2
Use DSP Block                      : Auto
Automatic Register Balancing       : No

---- Target Options
LUT Combining                      : Auto
Reduce Control Sets                : Auto
Add IO Buffers                     : YES
Global Maximum Fanout              : 100000
Add Generic Clock Buffer(BUFG)     : 32
Register Duplication               : YES
Optimize Instantiated Primitives   : NO
Use Clock Enable                   : Auto
Use Synchronous Set                : Auto
Use Synchronous Reset              : Auto
Pack IO Registers into IOBs        : Auto
Equivalent register Removal        : YES

---- General Options
Optimization Goal                  : Speed
Optimization Effort                : 1
Power Reduction                    : NO
Keep Hierarchy                     : No
Netlist Hierarchy                  : As_Optimized
RTL Output                         : Yes
Global Optimization                : AllClockNets
Read Cores                         : YES
Write Timing Constraints           : NO
Cross Clock Analysis               : NO
Hierarchy Separator                : /
Bus Delimiter                      : <>
Case Specifier                     : Maintain
Slice Utilization Ratio            : 100
BRAM Utilization Ratio             : 100
DSP48 Utilization Ratio            : 100
Auto BRAM Packing                  : NO
Slice Utilization Ratio Delta      : 5

=========================================================================


=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "G:/RTL/XOR_M.v" into library work
Parsing module <XOR_M>.
Analyzing Verilog file "G:/RTL/RegisterMult.v" into library work
Parsing module <RegisterMult>.
Analyzing Verilog file "G:/RTL/RegisterAdd.v" into library work
Parsing module <RegisterAdd>.
Analyzing Verilog file "G:/RTL/OR_Module.v" into library work
Parsing module <OR_Module>.
Analyzing Verilog file "G:/RTL/Multiplier_P.v" into library work
Parsing module <Multiplier_P>.
Analyzing Verilog file "G:/RTL/Multiplexer_AC.v" into library work
Parsing module <Multiplexer_AC>.
Analyzing Verilog file "G:/RTL/Greater_Comparator.v" into library work
Parsing module <Greater_Comparator>.
Analyzing Verilog file "G:/RTL/Deco_Round_Mult.v" into library work
Parsing module <Deco_Round_Mult>.
Analyzing Verilog file "G:/RTL/Comparator_Less.v" into library work
Parsing module <Comparator_Less>.
Analyzing Verilog file "G:/RTL/Comparator_Equal.v" into library work
Parsing module <Comparator_Equal>.
Analyzing Verilog file "G:/RTL/add_sub_carry_out.v" into library work
Parsing module <add_sub_carry_out>.
Analyzing Verilog file "G:/RTL/Add_Subtract_M.v" into library work
Parsing module <Add_Subtract_M>.
Analyzing Verilog file "G:/RTL/add_subtract.v" into library work
Parsing module <add_subtract>.
Analyzing Verilog file "G:/RTL/Zero_InfMult_Unit.v" into library work
Parsing module <Zero_InfMult_Unit>.
Analyzing Verilog file "G:/RTL/Third_Phase_M.v" into library work
Parsing module <Third_Phase_M>.
Analyzing Verilog file "G:/RTL/Sixth_Phase_M.v" into library work
Parsing module <Sixth_Phase_M>.
Analyzing Verilog file "G:/RTL/Seventh_Phase_M.v" into library work
Parsing module <Seventh_Phase_M>.
Analyzing Verilog file "G:/RTL/Second_Phase_M.v" into library work
Parsing module <Second_Phase_M>.
Analyzing Verilog file "G:/RTL/Ninth_Phase_M.v" into library work
Parsing module <Ninth_Phase_M>.
Analyzing Verilog file "G:/RTL/FSM_Mult_Function.v" into library work
Parsing module <FSM_Mult_Function>.
Analyzing Verilog file "G:/RTL/Fourth_Phase_M.v" into library work
Parsing module <Fourth_Phase_M>.
Analyzing Verilog file "G:/RTL/First_Phase_M.v" into library work
Parsing module <First_Phase_M>.
Analyzing Verilog file "G:/RTL/Fifth_Phase_M.v" into library work
Parsing module <Fifth_Phase_M>.
Analyzing Verilog file "G:/RTL/Eight_Phase_M.v" into library work
Parsing module <Eight_Phase_M>.
Analyzing Verilog file "G:/RTL/FPU_Multiplication_Function.v" into library work
Parsing module <FPU_Multiplication_Function>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <FPU_Multiplication_Function>.

Elaborating module <FSM_Mult_Function>.

Elaborating module <First_Phase_M(W=32)>.

Elaborating module <RegisterMult(W=32)>.

Elaborating module <Zero_InfMult_Unit(W=32)>.

Elaborating module <Comparator_Equal(S=32)>.

Elaborating module <RegisterAdd(W=1)>.

Elaborating module <Ninth_Phase_M(W_Exp=8)>.

Elaborating module <add_sub_carry_out(W=8)>.

Elaborating module <RegisterMult(W=9)>.

Elaborating module <Comparator_Less(W=9)>.

Elaborating module <RegisterMult(W=1)>.

Elaborating module <Second_Phase_M(W_Exp=8)>.

Elaborating module <Add_Subtract_M(W=9)>.

Elaborating module <Third_Phase_M(W_Exp=8)>.

Elaborating module <Greater_Comparator(W=8)>.

Elaborating module <RegisterMult(W=8)>.

Elaborating module <Fourth_Phase_M(W_Sgf=23)>.

Elaborating module <RegisterMult(W=24)>.

Elaborating module <Multiplier_P(W_Sgf=23)>.

Elaborating module <RegisterMult(W=48)>.

Elaborating module <Fifth_Phase_M(W_Sgf=23)>.

Elaborating module <Multiplexer_AC(W=25)>.

Elaborating module <Multiplexer_AC(W=24)>.

Elaborating module <Sixth_Phase_M(W_Exp=8)>.

Elaborating module <Multiplexer_AC(W=8)>.

Elaborating module <add_subtract(W=8)>.

Elaborating module <Seventh_Phase_M(W_Sgf=23)>.

Elaborating module <OR_Module(W=23)>.

Elaborating module <XOR_M>.

Elaborating module <Deco_Round_Mult>.

Elaborating module <add_sub_carry_out(W=24)>.

Elaborating module <RegisterMult(W=25)>.

Elaborating module <Eight_Phase_M(W=32)>.

Elaborating module <Multiplexer_AC(W=32)>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <FPU_Multiplication_Function>.
    Related source file is "G:/RTL/FPU_Multiplication_Function.v".
        W = 32
        W_Exp = 8
        W_Sgf = 23
        S_Exp = 9
    Summary:
	no macro.
Unit <FPU_Multiplication_Function> synthesized.

Synthesizing Unit <FSM_Mult_Function>.
    Related source file is "G:/RTL/FSM_Mult_Function.v".
        zero = 6'b000000
        load_operands = 6'b000001
        zero_check_a = 6'b000010
        zero_check_b = 6'b000011
        zero_check_c = 6'b000100
        addsub_exp_bias = 6'b000101
        load_addsubexpbias = 6'b000110
        info_exp_a = 6'b000111
        load_exp_ovflow_info = 6'b001000
        first_ov_ccout = 6'b001001
        first_ov_ccomp = 6'b001010
        load_pre_mult_sgfs = 6'b001011
        pre_mult_time = 6'b001100
        load_mult_sgfs = 6'b001101
        r_sgf_selection_a = 6'b001110
        r_sgf_selection_b = 6'b001111
        r_sgf_selection_c = 6'b010000
        exp_update_a = 6'b010001
        exp_update_b = 6'b010010
        exp_update_c = 6'b010011
        exp_update_d = 6'b010100
        exp_update_e = 6'b010101
        second_ov_ccomp = 6'b010110
        round_state_a = 6'b010111
        update_sgf_a = 6'b011000
        update_sgf_b = 6'b011001
        update_sgf_c = 6'b011010
        new_update_exp_a = 6'b011011
        new_update_exp_b = 6'b011100
        new_update_exp_c = 6'b011101
        new_update_exp_d = 6'b011110
        new_update_exp_e = 6'b011111
        f_overflow_q = 6'b100000
        final_result_a = 6'b100001
        final_result_b = 6'b100010
        final_result_c = 6'b100011
        final_result_d = 6'b100100
        overflow_management_a = 6'b100101
        overflow_management_b = 6'b100110
        underflow_check_a = 6'b100111
        underflow_check_b = 6'b101000
        underflow_check_c = 6'b101001
        underflow_check_d = 6'b101010
        underflow_info = 6'b101011
        underflow_management_a = 6'b101100
        underflow_management_b = 6'b101101
    Found 6-bit register for signal <state_reg>.
    Found finite state machine <FSM_0> for signal <state_reg>.
    -----------------------------------------------------------------------
    | States             | 46                                             |
    | Transitions        | 54                                             |
    | Inputs             | 7                                              |
    | Outputs            | 25                                             |
    | Clock              | clk (rising_edge)                              |
    | Reset              | rst (positive)                                 |
    | Reset type         | asynchronous                                   |
    | Reset State        | 000000                                         |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Summary:
	inferred   3 Multiplexer(s).
	inferred   1 Finite State Machine(s).
Unit <FSM_Mult_Function> synthesized.

Synthesizing Unit <First_Phase_M>.
    Related source file is "G:/RTL/First_Phase_M.v".
        W = 32
    Summary:
	no macro.
Unit <First_Phase_M> synthesized.

Synthesizing Unit <RegisterMult_1>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 32
    Found 32-bit register for signal <Q>.
    Summary:
	inferred  32 D-type flip-flop(s).
Unit <RegisterMult_1> synthesized.

Synthesizing Unit <Zero_InfMult_Unit>.
    Related source file is "G:/RTL/Zero_InfMult_Unit.v".
        W = 32
    Summary:
	no macro.
Unit <Zero_InfMult_Unit> synthesized.

Synthesizing Unit <Comparator_Equal>.
    Related source file is "G:/RTL/Comparator_Equal.v".
        S = 32
    Found 32-bit comparator equal for signal <equal_sgn> created at line 37
    Summary:
	inferred   1 Comparator(s).
Unit <Comparator_Equal> synthesized.

Synthesizing Unit <RegisterAdd>.
    Related source file is "G:/RTL/RegisterAdd.v".
        W = 1
    Found 1-bit register for signal <Q>.
    Summary:
	inferred   1 D-type flip-flop(s).
Unit <RegisterAdd> synthesized.

Synthesizing Unit <Ninth_Phase_M>.
    Related source file is "G:/RTL/Ninth_Phase_M.v".
        W_Exp = 8
    Summary:
	no macro.
Unit <Ninth_Phase_M> synthesized.

Synthesizing Unit <add_sub_carry_out_1>.
    Related source file is "G:/RTL/add_sub_carry_out.v".
        W = 8
    Found 9-bit adder for signal <Data_S> created at line 36.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <add_sub_carry_out_1> synthesized.

Synthesizing Unit <RegisterMult_2>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 9
    Found 9-bit register for signal <Q>.
    Summary:
	inferred   9 D-type flip-flop(s).
Unit <RegisterMult_2> synthesized.

Synthesizing Unit <Comparator_Less>.
    Related source file is "G:/RTL/Comparator_Less.v".
        W = 9
    Found 9-bit comparator greater for signal <less> created at line 29
    Summary:
	inferred   1 Comparator(s).
Unit <Comparator_Less> synthesized.

Synthesizing Unit <RegisterMult_3>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 1
    Found 1-bit register for signal <Q>.
    Summary:
	inferred   1 D-type flip-flop(s).
Unit <RegisterMult_3> synthesized.

Synthesizing Unit <Second_Phase_M>.
    Related source file is "G:/RTL/Second_Phase_M.v".
        W_Exp = 8
    Summary:
	no macro.
Unit <Second_Phase_M> synthesized.

Synthesizing Unit <Add_Subtract_M>.
    Related source file is "G:/RTL/Add_Subtract_M.v".
        W = 9
    Found 9-bit subtractor for signal <result> created at line 29.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <Add_Subtract_M> synthesized.

Synthesizing Unit <Third_Phase_M>.
    Related source file is "G:/RTL/Third_Phase_M.v".
        W_Exp = 8
    Summary:
	no macro.
Unit <Third_Phase_M> synthesized.

Synthesizing Unit <Greater_Comparator>.
    Related source file is "G:/RTL/Greater_Comparator.v".
        W = 8
    Found 8-bit comparator greater for signal <gthan> created at line 29
    Summary:
	inferred   1 Comparator(s).
Unit <Greater_Comparator> synthesized.

Synthesizing Unit <RegisterMult_4>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 8
    Found 8-bit register for signal <Q>.
    Summary:
	inferred   8 D-type flip-flop(s).
Unit <RegisterMult_4> synthesized.

Synthesizing Unit <Fourth_Phase_M>.
    Related source file is "G:/RTL/Fourth_Phase_M.v".
        W_Sgf = 23
    Summary:
	no macro.
Unit <Fourth_Phase_M> synthesized.

Synthesizing Unit <RegisterMult_5>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 24
    Found 24-bit register for signal <Q>.
    Summary:
	inferred  24 D-type flip-flop(s).
Unit <RegisterMult_5> synthesized.

Synthesizing Unit <Multiplier_P>.
    Related source file is "G:/RTL/Multiplier_P.v".
        W_Sgf = 23
    Found 24x24-bit multiplier for signal <Result> created at line 32.
    Summary:
	inferred   1 Multiplier(s).
Unit <Multiplier_P> synthesized.

Synthesizing Unit <RegisterMult_6>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 48
    Found 48-bit register for signal <Q>.
    Summary:
	inferred  48 D-type flip-flop(s).
Unit <RegisterMult_6> synthesized.

Synthesizing Unit <Fifth_Phase_M>.
    Related source file is "G:/RTL/Fifth_Phase_M.v".
        W_Sgf = 23
    Summary:
	no macro.
Unit <Fifth_Phase_M> synthesized.

Synthesizing Unit <Multiplexer_AC_1>.
    Related source file is "G:/RTL/Multiplexer_AC.v".
        W = 25
    Summary:
	inferred   1 Multiplexer(s).
Unit <Multiplexer_AC_1> synthesized.

Synthesizing Unit <Multiplexer_AC_2>.
    Related source file is "G:/RTL/Multiplexer_AC.v".
        W = 24
    Summary:
	inferred   1 Multiplexer(s).
Unit <Multiplexer_AC_2> synthesized.

Synthesizing Unit <Sixth_Phase_M>.
    Related source file is "G:/RTL/Sixth_Phase_M.v".
        W_Exp = 8
    Summary:
	no macro.
Unit <Sixth_Phase_M> synthesized.

Synthesizing Unit <Multiplexer_AC_3>.
    Related source file is "G:/RTL/Multiplexer_AC.v".
        W = 8
    Summary:
	inferred   1 Multiplexer(s).
Unit <Multiplexer_AC_3> synthesized.

Synthesizing Unit <add_subtract>.
    Related source file is "G:/RTL/add_subtract.v".
        W = 8
    Found 8-bit adder for signal <Data_S> created at line 34.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <add_subtract> synthesized.

Synthesizing Unit <Seventh_Phase_M>.
    Related source file is "G:/RTL/Seventh_Phase_M.v".
        W_Sgf = 23
    Summary:
	no macro.
Unit <Seventh_Phase_M> synthesized.

Synthesizing Unit <OR_Module>.
    Related source file is "G:/RTL/OR_Module.v".
        W = 23
    Summary:
	no macro.
Unit <OR_Module> synthesized.

Synthesizing Unit <XOR_M>.
    Related source file is "G:/RTL/XOR_M.v".
    Summary:
Unit <XOR_M> synthesized.

Synthesizing Unit <Deco_Round_Mult>.
    Related source file is "G:/RTL/Deco_Round_Mult.v".
    Summary:
	no macro.
Unit <Deco_Round_Mult> synthesized.

Synthesizing Unit <add_sub_carry_out_2>.
    Related source file is "G:/RTL/add_sub_carry_out.v".
        W = 24
    Found 25-bit adder for signal <Data_S> created at line 36.
    Summary:
	inferred   1 Adder/Subtractor(s).
Unit <add_sub_carry_out_2> synthesized.

Synthesizing Unit <RegisterMult_7>.
    Related source file is "G:/RTL/RegisterMult.v".
        W = 25
    Found 25-bit register for signal <Q>.
    Summary:
	inferred  25 D-type flip-flop(s).
Unit <RegisterMult_7> synthesized.

Synthesizing Unit <Eight_Phase_M>.
    Related source file is "G:/RTL/Eight_Phase_M.v".
        W = 32
    Summary:
	no macro.
Unit <Eight_Phase_M> synthesized.

Synthesizing Unit <Multiplexer_AC_4>.
    Related source file is "G:/RTL/Multiplexer_AC.v".
        W = 32
    Summary:
	inferred   1 Multiplexer(s).
Unit <Multiplexer_AC_4> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 1
 24x24-bit multiplier                                  : 1
# Adders/Subtractors                                   : 4
 25-bit adder                                          : 1
 8-bit adder                                           : 1
 9-bit adder                                           : 1
 9-bit subtractor                                      : 1
# Registers                                            : 21
 1-bit register                                        : 7
 24-bit register                                       : 3
 25-bit register                                       : 1
 32-bit register                                       : 4
 48-bit register                                       : 1
 8-bit register                                        : 3
 9-bit register                                        : 2
# Comparators                                          : 5
 32-bit comparator equal                               : 2
 8-bit comparator greater                              : 2
 9-bit comparator greater                              : 1
# Multiplexers                                         : 10
 1-bit 2-to-1 multiplexer                              : 3
 24-bit 2-to-1 multiplexer                             : 1
 25-bit 2-to-1 multiplexer                             : 2
 32-bit 2-to-1 multiplexer                             : 2
 8-bit 2-to-1 multiplexer                              : 2
# FSMs                                                 : 1
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# Multipliers                                          : 1
 24x24-bit multiplier                                  : 1
# Adders/Subtractors                                   : 4
 25-bit adder                                          : 1
 8-bit adder                                           : 1
 9-bit adder                                           : 1
 9-bit subtractor                                      : 1
# Registers                                            : 322
 Flip-Flops                                            : 322
# Comparators                                          : 5
 32-bit comparator equal                               : 2
 8-bit comparator greater                              : 2
 9-bit comparator greater                              : 1
# Multiplexers                                         : 10
 1-bit 2-to-1 multiplexer                              : 3
 24-bit 2-to-1 multiplexer                             : 1
 25-bit 2-to-1 multiplexer                             : 2
 32-bit 2-to-1 multiplexer                             : 2
 8-bit 2-to-1 multiplexer                              : 2
# FSMs                                                 : 1
# Xors                                                 : 1
 1-bit xor2                                            : 1

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <FSM_FPU_Multiplication/FSM_0> on signal <state_reg[1:46]> with one-hot encoding.
----------------------------------------------------------
 State  | Encoding
----------------------------------------------------------
 000000 | 0000000000000000000000000000000000000000000001
 000001 | 0000000000000000000000000000000000000000000010
 000010 | 0000000000000000000000000000000000000000000100
 000011 | 0000000000000000000000000000000000000000001000
 000100 | 0000000000000000000000000000000000000000010000
 100111 | 0000000000000000000000000000000000000000100000
 100100 | 0000000000000000000000000000000000000001000000
 000110 | 0000000000000000000000000000000000000010000000
 000111 | 0000000000000000000000000000000000000100000000
 001000 | 0000000000000000000000000000000000001000000000
 001001 | 0000000000000000000000000000000000010000000000
 001010 | 0000000000000000000000000000000000100000000000
 100101 | 0000000000000000000000000000000001000000000000
 001011 | 0000000000000000000000000000000010000000000000
 001100 | 0000000000000000000000000000000100000000000000
 001101 | 0000000000000000000000000000001000000000000000
 001110 | 0000000000000000000000000000010000000000000000
 001111 | 0000000000000000000000000000100000000000000000
 010000 | 0000000000000000000000000001000000000000000000
 010001 | 0000000000000000000000000010000000000000000000
 010010 | 0000000000000000000000000100000000000000000000
 010011 | 0000000000000000000000001000000000000000000000
 010100 | 0000000000000000000000010000000000000000000000
 010101 | 0000000000000000000000100000000000000000000000
 010110 | 0000000000000000000001000000000000000000000000
 010111 | 0000000000000000000010000000000000000000000000
 011000 | 0000000000000000000100000000000000000000000000
 011001 | 0000000000000000001000000000000000000000000000
 011010 | 0000000000000000010000000000000000000000000000
 011011 | 0000000000000000100000000000000000000000000000
 011100 | 0000000000000001000000000000000000000000000000
 011101 | 0000000000000010000000000000000000000000000000
 011110 | 0000000000000100000000000000000000000000000000
 011111 | 0000000000001000000000000000000000000000000000
 100000 | 0000000000010000000000000000000000000000000000
 100001 | 0000000000100000000000000000000000000000000000
 100010 | 0000000001000000000000000000000000000000000000
 100011 | 0000000010000000000000000000000000000000000000
 100110 | 0000000100000000000000000000000000000000000000
 101000 | 0000001000000000000000000000000000000000000000
 101001 | 0000010000000000000000000000000000000000000000
 101010 | 0000100000000000000000000000000000000000000000
 101011 | 0001000000000000000000000000000000000000000000
 000101 | 0010000000000000000000000000000000000000000000
 101100 | 0100000000000000000000000000000000000000000000
 101101 | 1000000000000000000000000000000000000000000000
----------------------------------------------------------

Optimizing unit <RegisterMult_1> ...

Optimizing unit <RegisterMult_7> ...

Optimizing unit <RegisterMult_4> ...

Optimizing unit <RegisterMult_5> ...

Optimizing unit <RegisterMult_6> ...

Optimizing unit <FPU_Multiplication_Function> ...

Optimizing unit <Sixth_Phase_M> ...
INFO:Xst:2261 - The FF/Latch <Significands_Multiplication_Funct/P_SgfX_Register/Q_23> in Unit <FPU_Multiplication_Function> is equivalent to the following FF/Latch, which will be removed : <Significands_Multiplication_Funct/P_SgfY_Register/Q_23> 

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 5) on block FPU_Multiplication_Function, actual ratio is 0.

Final Macro Processing ...

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 367
 Flip-Flops                                            : 367

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Top Level Output File Name         : FPU_Multiplication_Function.ngc

Primitive and Black Box Usage:
------------------------------
# BELS                             : 265
#      GND                         : 1
#      INV                         : 2
#      LUT1                        : 23
#      LUT2                        : 27
#      LUT3                        : 9
#      LUT4                        : 10
#      LUT5                        : 44
#      LUT6                        : 72
#      MUXCY                       : 44
#      VCC                         : 1
#      XORCY                       : 32
# FlipFlops/Latches                : 367
#      FDC                         : 47
#      FDCE                        : 319
#      FDP                         : 1
# Clock Buffers                    : 1
#      BUFGP                       : 1
# IO Buffers                       : 104
#      IBUF                        : 69
#      OBUF                        : 35
# DSPs                             : 2
#      DSP48E1                     : 2

Device utilization summary:
---------------------------

Selected Device : 7a100tcsg324-3 


Slice Logic Utilization: 
 Number of Slice Registers:             367  out of  126800     0%  
 Number of Slice LUTs:                  187  out of  63400     0%  
    Number used as Logic:               187  out of  63400     0%  

Slice Logic Distribution: 
 Number of LUT Flip Flop pairs used:    419
   Number with an unused Flip Flop:      52  out of    419    12%  
   Number with an unused LUT:           232  out of    419    55%  
   Number of fully used LUT-FF pairs:   135  out of    419    32%  
   Number of unique control sets:        14

IO Utilization: 
 Number of IOs:                         105
 Number of bonded IOBs:                 105  out of    210    50%  

Specific Feature Utilization:
 Number of BUFG/BUFGCTRLs:                1  out of     32     3%  
 Number of DSP48E1s:                      2  out of    240     0%  

---------------------------
Partition Resource Summary:
---------------------------

  No Partitions were found in this design.

---------------------------


=========================================================================
Timing Report

NOTE: THESE TIMING NUMBERS ARE ONLY A SYNTHESIS ESTIMATE.
      FOR ACCURATE TIMING INFORMATION PLEASE REFER TO THE TRACE REPORT
      GENERATED AFTER PLACE-and-ROUTE.

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 367   |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -3

   Minimum period: 5.009ns (Maximum Frequency: 199.649MHz)
   Minimum input arrival time before clock: 0.738ns
   Maximum output required time after clock: 1.263ns
   Maximum combinational path delay: No path found

Timing Details:
---------------
All values displayed in nanoseconds (ns)

=========================================================================
Timing constraint: Default period analysis for Clock 'clk'
  Clock period: 5.009ns (frequency: 199.649MHz)
  Total number of paths / destination ports: 65521 / 942
-------------------------------------------------------------------------
Delay:               5.009ns (Levels of Logic = 2)
  Source:            Significands_Multiplication_Funct/P_SgfX_Register/Q_23 (FF)
  Destination:       Significands_Multiplication_Funct/P_Sgf_Register/Q_47 (FF)
  Source Clock:      clk rising
  Destination Clock: clk rising

  Data Path: Significands_Multiplication_Funct/P_SgfX_Register/Q_23 to Significands_Multiplication_Funct/P_Sgf_Register/Q_47
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q             2   0.361   0.284  Significands_Multiplication_Funct/P_SgfX_Register/Q_23 (Significands_Multiplication_Funct/P_SgfX_Register/Q_23)
     DSP48E1:A23->PCOUT47    1   2.970   0.000  Significands_Multiplication_Funct/P_Sgf_Mult/Mmult_Result (Significands_Multiplication_Funct/P_Sgf_Mult/Mmult_Result_PCOUT_to_Significands_Multiplication_Funct/P_Sgf_Mult/Mmult_Result1_PCIN_47)
     DSP48E1:PCIN47->P30    1   1.107   0.279  Significands_Multiplication_Funct/P_Sgf_Mult/Mmult_Result1 (Significands_Multiplication_Funct/P_Sgf_reg<47>)
     FDCE:D                    0.008          Significands_Multiplication_Funct/P_Sgf_Register/Q_47
    ----------------------------------------
    Total                      5.009ns (4.446ns logic, 0.563ns route)
                                       (88.8% logic, 11.2% route)

=========================================================================
Timing constraint: Default OFFSET IN BEFORE for Clock 'clk'
  Total number of paths / destination ports: 164 / 138
-------------------------------------------------------------------------
Offset:              0.738ns (Levels of Logic = 1)
  Source:            rst (PAD)
  Destination:       FSM_FPU_Multiplication/state_reg_FSM_FFd22 (FF)
  Destination Clock: clk rising

  Data Path: rst to FSM_FPU_Multiplication/state_reg_FSM_FFd22
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     IBUF:I->O            46   0.001   0.388  rst_IBUF (rst_IBUF)
     FDP:PRE                   0.349          FSM_FPU_Multiplication/state_reg_FSM_FFd46
    ----------------------------------------
    Total                      0.738ns (0.350ns logic, 0.388ns route)
                                       (47.4% logic, 52.6% route)

=========================================================================
Timing constraint: Default OFFSET OUT AFTER for Clock 'clk'
  Total number of paths / destination ports: 37 / 35
-------------------------------------------------------------------------
Offset:              1.263ns (Levels of Logic = 2)
  Source:            Exp_Update_Function/PROverflow_Register/Q_0 (FF)
  Destination:       overflow_flag (PAD)
  Source Clock:      clk rising

  Data Path: Exp_Update_Function/PROverflow_Register/Q_0 to overflow_flag
                                Gate     Net
    Cell:in->out      fanout   Delay   Delay  Logical Name (Net Name)
    ----------------------------------------  ------------
     FDCE:C->Q             4   0.361   0.525  Exp_Update_Function/PROverflow_Register/Q_0 (Exp_Update_Function/PROverflow_Register/Q_0)
     LUT3:I0->O            1   0.097   0.279  overflow_flag1 (overflow_flag_OBUF)
     OBUF:I->O                 0.000          overflow_flag_OBUF (overflow_flag)
    ----------------------------------------
    Total                      1.263ns (0.458ns logic, 0.805ns route)
                                       (36.3% logic, 63.7% route)

=========================================================================

Cross Clock Domains Report:
--------------------------

Clock to Setup on destination clock clk
---------------+---------+---------+---------+---------+
               | Src:Rise| Src:Fall| Src:Rise| Src:Fall|
Source Clock   |Dest:Rise|Dest:Rise|Dest:Fall|Dest:Fall|
---------------+---------+---------+---------+---------+
clk            |    5.009|         |         |         |
---------------+---------+---------+---------+---------+

=========================================================================


Total REAL time to Xst completion: 22.00 secs
Total CPU time to Xst completion: 21.58 secs
 
--> 

Total memory usage is 359084 kilobytes

Number of errors   :    0 (   0 filtered)
Number of warnings :    0 (   0 filtered)
Number of infos    :    1 (   0 filtered)

